{"ast":null,"code":"import _asyncToGenerator from \"C:/Angeerasa/Projects/SaAn-Code/SaAnCode Front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../services/data.service\";\nimport * as i3 from \"@angular/forms\";\nexport class PostQuestionComponent {\n  constructor(http, service) {\n    this.http = http;\n    this.service = service;\n    this.hnts = [];\n  }\n\n  ngOnInit() {}\n\n  addHint() {\n    let hnt = {\n      hint: this.hnt\n    };\n    this.hnts.push(hnt);\n    this.hnt = '';\n  } // postHint(){\n  //   this.hints.push(hint:this.hint);\n  //   this.hint=\"\";\n  // }\n\n\n  postQuestion() {\n    let Topics = [];\n    let tcs = this.relatedTopics.split(\" \");\n    tcs.forEach(element => {\n      let tpc = {\n        topic: element\n      };\n      Topics.push(tpc);\n    });\n    let question = {\n      heading: this.title,\n      description: this.description,\n      relatedTopics: Topics,\n      hints: this.hnts,\n      solution: this.original_solution,\n      testCases: this.test_cases\n    };\n    this.service.original_code_language = this.language_used;\n    this.service.createQuestion(question).subscribe(res => {\n      console.log(res);\n    });\n  } // OLD CODE:\n  //---------\n  // let question = {\n  //   heading:this.title,\n  //   description: this.description,\n  //   hints: this.hints\n  // }\n  // this.service.createQuestion(question).subscribe(\n  //   (response:any)=>{\n  //     console.log(response);\n  //   },\n  // (error)=>{\n  //   console.log(error);\n  // }\n  // )\n\n\n  solutionSubmit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let obj = {\n        language: _this.language_used,\n        script: _this.original_solution,\n        stdIn: _this.test_cases\n      };\n      const output = yield lastValueFrom(_this.http.post('http://localhost:3000/getSolution', obj));\n      console.log(output);\n    })();\n  }\n\n}\n\nPostQuestionComponent.ɵfac = function PostQuestionComponent_Factory(t) {\n  return new (t || PostQuestionComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.DataService));\n};\n\nPostQuestionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostQuestionComponent,\n  selectors: [[\"app-post-question\"]],\n  decls: 26,\n  vars: 7,\n  consts: [[\"type\", \"text\", \"placeholder\", \"Question Title\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"question_description\", \"id\", \"\", \"cols\", \"35\", \"rows\", \"5\", \"required\", \"\", \"placeholder\", \"Explain your Problem Here ...\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Hint\", 3, \"ngModel\", \"ngModelChange\"], [2, \"color\", \"rgb(28, 77, 239)\"], [3, \"click\"], [\"type\", \"text\", \"placeholder\", \"Topic Tags\", 3, \"ngModel\", \"ngModelChange\"], [\"cols\", \"30\", \"rows\", \"10\", 3, \"ngModel\", \"ngModelChange\"], [\"cols\", \"50\", \"rows\", \"10\", \"id\", \"myInput\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Language Used\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function PostQuestionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"br\");\n      i0.ɵɵelementStart(2, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function PostQuestionComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.title = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"br\");\n      i0.ɵɵelementStart(4, \"textarea\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function PostQuestionComponent_Template_textarea_ngModelChange_4_listener($event) {\n        return ctx.description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"br\");\n      i0.ɵɵelementStart(6, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function PostQuestionComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.hnt = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\", 3);\n      i0.ɵɵtext(8, \"Click \\\"Post\\\" to add for Submission\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function PostQuestionComponent_Template_button_click_9_listener() {\n        return ctx.addHint();\n      });\n      i0.ɵɵtext(10, \"Post\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\");\n      i0.ɵɵelementStart(12, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function PostQuestionComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.relatedTopics = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"br\")(14, \"br\");\n      i0.ɵɵtext(15, \" Enter Test Cases \");\n      i0.ɵɵelementStart(16, \"textarea\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function PostQuestionComponent_Template_textarea_ngModelChange_16_listener($event) {\n        return ctx.test_cases = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵtext(18, \" Enter Your solution: \");\n      i0.ɵɵelementStart(19, \"textarea\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function PostQuestionComponent_Template_textarea_ngModelChange_19_listener($event) {\n        return ctx.original_solution = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵelementStart(21, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function PostQuestionComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.language_used = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function PostQuestionComponent_Template_button_click_22_listener() {\n        return ctx.solutionSubmit();\n      });\n      i0.ɵɵtext(23, \"Try Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function PostQuestionComponent_Template_button_click_24_listener() {\n        return ctx.postQuestion();\n      });\n      i0.ɵɵtext(25, \"Publish\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.description);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.hnt);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.relatedTopics);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.test_cases);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.original_solution);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.language_used);\n    }\n  },\n  dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.RequiredValidator, i3.NgModel],\n  styles: [\"input[_ngcontent-%COMP%]{\\r\\n    margin: 2mm solid green;\\r\\n    border: 4 mm solid green;\\r\\n    padding: 1 mm;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3QtcXVlc3Rpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtJQUN2Qix3QkFBd0I7SUFDeEIsYUFBYTtBQUNqQiIsImZpbGUiOiJwb3N0LXF1ZXN0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dHtcclxuICAgIG1hcmdpbjogMm1tIHNvbGlkIGdyZWVuO1xyXG4gICAgYm9yZGVyOiA0IG1tIHNvbGlkIGdyZWVuO1xyXG4gICAgcGFkZGluZzogMSBtbTtcclxufSJdfQ== */\"]\n});","map":{"version":3,"mappings":";AAEA,SAASA,aAAT,QAA8B,MAA9B;;;;;AAyBA,OAAM,MAAOC,qBAAP,CAA4B;EAUhCC,YAAoBC,IAApB,EAA4CC,OAA5C,EAA+D;IAA3C;IAAwB;IAT5C,YAAY,EAAZ;EAUC;;EAEDC,QAAQ,IACP;;EAEDC,OAAO;IACL,IAAIC,GAAG,GAAM;MACXC,IAAI,EAAC,KAAKD;IADC,CAAb;IAGA,KAAKE,IAAL,CAAUC,IAAV,CAAeH,GAAf;IACA,KAAKA,GAAL,GAAS,EAAT;EACD,CAtB+B,CAuBhC;EACA;EACA;EACA;;;EAEAI,YAAY;IACV,IAAIC,MAAM,GAAU,EAApB;IACA,IAAIC,GAAG,GAAG,KAAKC,aAAL,CAAmBC,KAAnB,CAAyB,GAAzB,CAAV;IACAF,GAAG,CAACG,OAAJ,CAAYC,OAAO,IAAG;MACpB,IAAIC,GAAG,GAAO;QACZC,KAAK,EAAEF;MADK,CAAd;MAGAL,MAAM,CAACF,IAAP,CAAYQ,GAAZ;IACD,CALD;IAMA,IAAIE,QAAQ,GAAU;MACpBC,OAAO,EAAE,KAAKC,KADM;MAEpBC,WAAW,EAAE,KAAKA,WAFE;MAGpBT,aAAa,EAAEF,MAHK;MAIpBY,KAAK,EAAE,KAAKf,IAJQ;MAKpBgB,QAAQ,EAAE,KAAKC,iBALK;MAMpBC,SAAS,EAAE,KAAKC;IANI,CAAtB;IAQA,KAAKxB,OAAL,CAAayB,sBAAb,GAAoC,KAAKC,aAAzC;IACA,KAAK1B,OAAL,CAAa2B,cAAb,CAA4BX,QAA5B,EAAsCY,SAAtC,CACGC,GAAD,IAAW;MACTC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CAHH;EAKD,CAnD+B,CAqD9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEMG,cAAc;IAAA;;IAAA;MAClB,IAAIC,GAAG,GAAG;QACRC,QAAQ,EAAE,KAAI,CAACR,aADP;QAERS,MAAM,EAAC,KAAI,CAACb,iBAFJ;QAGRc,KAAK,EAAE,KAAI,CAACZ;MAHJ,CAAV;MAMA,MAAMa,MAAM,SAASzC,aAAa,CAAC,KAAI,CAACG,IAAL,CAAUuC,IAAV,CAAe,mCAAf,EAAmDL,GAAnD,CAAD,CAAlC;MACAH,OAAO,CAACC,GAAR,CAAYM,MAAZ;IARkB;EASnB;;AA9E6B;;;mBAArBxC,uBAAqB0C;AAAA;;;QAArB1C;EAAqB2C;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC3BlCL;MACIA;MAEAA;MAAyDA;QAAA;MAAA;MAAzDA;MAA+EA;MAC/EA;MAAwEA;QAAA;MAAA;MAAsEA;MAAWA;MACrJA;MAAsCA;QAAA;MAAA;MAAtCA;MACAA;MAAoCA;MAAkCA;MACtEA;MAAQA;QAAA,OAAUM,aAAV;MAAmB,CAAnB;MAAqBN;MAAIA;MAAUA;MAG/CA;MAA4CA;QAAA;MAAA;MAA5CA;MAAwEA,uBAAI,EAAJ,EAAI,IAAJ;MACxEA;MACAA;MAA+BA;QAAA;MAAA;MAAyBA;MAAWA;MACnEA;MACAA;MAA4CA;QAAA;MAAA;MAAgCA;MAAWA;MACvFA;MAAmBA;QAAA;MAAA;MAAnBA;MACAA;MAAQA;QAAA,OAASM,oBAAT;MAAyB,CAAzB;MAA2BN;MAAQA;MAC3CA;MAAgCA;QAAA,OAASM,kBAAT;MAAuB,CAAvB;MAAyBN;MAAOA;;;;MAdPA;MAAAA;MACeA;MAAAA;MAC9BA;MAAAA;MAKEA;MAAAA;MAEbA;MAAAA;MAEaA;MAAAA;MACzBA;MAAAA","names":["lastValueFrom","PostQuestionComponent","constructor","http","service","ngOnInit","addHint","hnt","hint","hnts","push","postQuestion","Topics","tcs","relatedTopics","split","forEach","element","tpc","topic","question","heading","title","description","hints","solution","original_solution","testCases","test_cases","original_code_language","language_used","createQuestion","subscribe","res","console","log","solutionSubmit","obj","language","script","stdIn","output","post","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Angeerasa\\Projects\\SaAn-Code\\SaAnCode Front-end\\src\\app\\post-question\\post-question.component.ts","C:\\Angeerasa\\Projects\\SaAn-Code\\SaAnCode Front-end\\src\\app\\post-question\\post-question.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { lastValueFrom } from 'rxjs';\nimport { DataService } from '../services/data.service';\n// import { FormsModule } from '@angular/forms';\n\ninterface Question{\n  heading:string,\n  description:string,\n  hints:hint[],\n  relatedTopics:topic[],\n  solution:string,\n  testCases:string\n}\ninterface hint{\n  hint:string\n}\ninterface topic{\n  topic:string\n}\n\n@Component({\n  selector: 'app-post-question',\n  templateUrl: './post-question.component.html',\n  styleUrls: ['./post-question.component.css']\n})\n\nexport class PostQuestionComponent implements OnInit {\n  hnts:hint[]=[];\n  title!:string\n  description!:string\n  relatedTopics!:string;\n  hnt!: string;\n  test_cases!:string;\n  original_solution!:string;\n  language_used!: string;\n\n  constructor(private http:HttpClient,private service:DataService) { \n  }\n\n  ngOnInit(): void {\n  }\n\n  addHint(){//Adds hint to array ONLY on clicking\n    let hnt:hint={\n      hint:this.hnt\n    }\n    this.hnts.push(hnt);\n    this.hnt=''\n  }\n  // postHint(){\n  //   this.hints.push(hint:this.hint);\n  //   this.hint=\"\";\n  // }\n\n  postQuestion(){\n    let Topics: topic[]=[]\n    let tcs = this.relatedTopics.split(\" \");\n    tcs.forEach(element => {\n      let tpc:topic={\n        topic: element\n      }\n      Topics.push(tpc);\n    });\n    let question:Question={\n      heading: this.title,\n      description: this.description,\n      relatedTopics: Topics,\n      hints: this.hnts,\n      solution: this.original_solution,\n      testCases: this.test_cases\n    };\n    this.service.original_code_language=this.language_used\n    this.service.createQuestion(question).subscribe(\n      (res:any)=>{\n        console.log(res);\n      }\n    )\n  }\n    \n    // OLD CODE:\n    //---------\n    // let question = {\n    //   heading:this.title,\n    //   description: this.description,\n    //   hints: this.hints\n    // }\n    // this.service.createQuestion(question).subscribe(\n    //   (response:any)=>{\n    //     console.log(response);\n    //   },\n    // (error)=>{\n    //   console.log(error);\n    // }\n    // )\n\n    async solutionSubmit(){\n      let obj = {\n        language: this.language_used,\n        script:this.original_solution,\n        stdIn: this.test_cases\n      }\n  \n      const output = await lastValueFrom(this.http.post('http://localhost:3000/getSolution',obj))\n      console.log(output)\n    }\n\n  \n}\n","<div>\n    <br>\n    \n    <input type=\"text\" placeholder=\"Question Title\" required [(ngModel)]=\"title\" > <br>\n    <textarea name=\"question_description\" id=\"\" cols=\"35\" rows=\"5\" required [(ngModel)]=\"description\" placeholder=\"Explain your Problem Here ...\"></textarea><br>\n        <input type=\"text\" placeholder=\"Hint\" [(ngModel)]=\"hnt\">\n        <p style=\"color: rgb(28, 77, 239);\">Click \"Post\" to add for Submission</p>\n        <button on-click=\"addHint()\">Post</button> <br>\n        <!-- HINTS WILL BE ADDED FOR PUBLISHION ONLY WHEN \"Post\" BUTTON IS CLICKED\n        FOR EACH HINT -->\n    <input type=\"text\" placeholder=\"Topic Tags\" [(ngModel)]=\"relatedTopics\"><br><br>\n    Enter Test Cases\n    <textarea  cols=\"30\" rows=\"10\" [(ngModel)]=\"test_cases\"></textarea><br>\n    Enter Your solution:\n    <textarea  cols=\"50\" rows=\"10\" id=\"myInput\" [(ngModel)]=\"original_solution\"></textarea><br>\n    <input type=\"text\" [(ngModel)]=\"language_used\" placeholder=\"Language Used\">\n    <button (click)=\"solutionSubmit()\">Try Code</button>\n    <button class=\"btn btn-primary\" (click)=\"postQuestion()\">Publish</button>\n</div>\n\n<script type=\"text/javascript\">\n    var myInput = document.getElementById(\"myInput\");\n    if(myInput.addEventListener ) {\n        myInput.addEventListener('keydown',this.keyHandler,false);\n    } else if(myInput.attachEvent ) {\n        myInput.attachEvent('onkeydown',this.keyHandler); /* damn IE hack */\n    }\n\n    function keyHandler(e) {\n        var TABKEY = 9;\n        if(e.keyCode == TABKEY) {\n            this.value += \"\\t\";\n            if(e.preventDefault) {\n                e.preventDefault();\n            }\n            return false;\n        }\n    }\n</script>"]},"metadata":{},"sourceType":"module"}