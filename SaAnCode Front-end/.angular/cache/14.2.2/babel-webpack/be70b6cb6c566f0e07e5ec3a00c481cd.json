{"ast":null,"code":"import _asyncToGenerator from \"C:/Angeerasa/Projects/Angular/SaAnCode/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from './interfaces/login.interface';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  // displayLogin: boolean = true; // currently not in use\n  constructor(http) {\n    this.http = http;\n  }\n\n  createQuestion(question) {\n    console.log('ENTERED INTO CREATEQUESTION', this.authToken);\n    const header = new HttpHeaders().set('Authorization', `Bearer ${this.authToken}`);\n    return this.http.post(\"http://localhost:3000/write/problem\", question, {\n      headers: header\n    });\n  }\n\n  getProfile() {\n    const head = new HttpHeaders().set('Authorization', `Bearer ${this.authToken}`);\n    return this.http.get('http://localhost:3000/login/me', {\n      headers: head\n    });\n  }\n\n  getProfileByProblemId(problemId) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const header = new HttpHeaders().set('Authorization', `Bearer ${_this.authToken}`);\n\n      try {} finally {}\n    })();\n  }\n\n  getAllProblems() {\n    // Authentication not implemented\n    const head = new HttpHeaders().set('Authorization', `Bearer ${this.authToken}`);\n    return this.http.get('http://localhost:3000/problems');\n  }\n\n  login(userLogin) {\n    let user;\n    this.http.post(\"http://localhost:3000/login\", userLogin).subscribe(res => {\n      this.authToken = res.token;\n      user = res;\n    });\n    return user;\n  }\n\n}\n\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,UAAT,EAAoDC,WAApD,QAAuE,sBAAvE;AACA,SAAgBC,IAAhB,QAA4B,8BAA5B;;;AAOA,OAAM,MAAOC,WAAP,CAAkB;EAEtB;EACAC,YAAmBC,IAAnB,EAAkC;IAAf;EAAoB;;EAEvCC,cAAc,CAACC,QAAD,EAAa;IACzBC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C,KAAKC,SAAhD;IACA,MAAMC,MAAM,GAAG,IAAIV,WAAJ,GAAkBW,GAAlB,CAAsB,eAAtB,EAAsC,UAAU,KAAKF,SAAS,EAA9D,CAAf;IACA,OAAO,KAAKL,IAAL,CAAUQ,IAAV,CAAe,qCAAf,EAAqDN,QAArD,EAA8D;MAACO,OAAO,EAACH;IAAT,CAA9D,CAAP;EACD;;EACDI,UAAU;IACR,MAAMC,IAAI,GAAG,IAAIf,WAAJ,GAAkBW,GAAlB,CAAsB,eAAtB,EAAwC,UAAU,KAAKF,SAAS,EAAhE,CAAb;IACA,OAAO,KAAKL,IAAL,CAAUY,GAAV,CAAoB,gCAApB,EAAsD;MAACH,OAAO,EAACE;IAAT,CAAtD,CAAP;EACD;;EACKE,qBAAqB,CAACC,SAAD,EAAiB;IAAA;;IAAA;MAC1C,MAAMR,MAAM,GAAG,IAAIV,WAAJ,GAAkBW,GAAlB,CAAsB,eAAtB,EAAsC,UAAU,KAAI,CAACF,SAAS,EAA9D,CAAf;;MACA,IAAG,CAEF,CAFD,SAGF,CADG;IAJyC;EAK3C;;EACDU,cAAc;IACZ;IACA,MAAMJ,IAAI,GAAG,IAAIf,WAAJ,GAAkBW,GAAlB,CAAsB,eAAtB,EAAsC,UAAU,KAAKF,SAAS,EAA9D,CAAb;IACA,OAAO,KAAKL,IAAL,CAAUY,GAAV,CAAc,gCAAd,CAAP;EACD;;EACDI,KAAK,CAACC,SAAD,EAAc;IACjB,IAAIC,IAAJ;IACA,KAAKlB,IAAL,CAAUQ,IAAV,CAAqB,6BAArB,EAAmDS,SAAnD,EAA8DE,SAA9D,CAAyEC,GAAD,IAAO;MAC7E,KAAKf,SAAL,GAAgBe,GAAG,CAACC,KAApB;MACAH,IAAI,GAAGE,GAAP;IACD,CAHD;IAIA,OAAOF,IAAP;EACD;;AAhCqB;;;mBAAXpB,aAAWwB;AAAA;;;SAAXxB;EAAWyB,SAAXzB,WAAW;EAAA0B,YAFV","names":["HttpClient","HttpHeaders","User","DataService","constructor","http","createQuestion","question","console","log","authToken","header","set","post","headers","getProfile","head","get","getProfileByProblemId","problemId","getAllProblems","login","userLogin","user","subscribe","res","token","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Angeerasa\\Projects\\Angular\\SaAnCode\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpClientModule, HttpHandler, HttpHeaders } from '@angular/common/http';\nimport { Login, User } from './interfaces/login.interface';\nimport { Observable } from 'rxjs';\nimport { UrlSerializer } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService{\n  authToken!: String;\n  // displayLogin: boolean = true; // currently not in use\n  constructor(public http:HttpClient) { }\n\n  createQuestion(question:any){\n    console.log('ENTERED INTO CREATEQUESTION', this.authToken)\n    const header = new HttpHeaders().set('Authorization',`Bearer ${this.authToken}`)\n    return this.http.post(\"http://localhost:3000/write/problem\",question,{headers:header})\n  }\n  getProfile():Observable<User>{ // returns observable\n    const head = new HttpHeaders().set('Authorization',  `Bearer ${this.authToken}`)\n    return this.http.get<User>('http://localhost:3000/login/me', {headers:head});  \n  }\n  async getProfileByProblemId(problemId:string){ // name, age, occ, problems_writte_count\n    const header = new HttpHeaders().set('Authorization',`Bearer ${this.authToken}`)\n    try{\n\n    }\n  }\n  getAllProblems(){\n    // Authentication not implemented\n    const head = new HttpHeaders().set('Authorization',`Bearer ${this.authToken}`);\n    return this.http.get('http://localhost:3000/problems')\n  }\n  login(userLogin:any):User{\n    let user!:User;\n    this.http.post<User>(\"http://localhost:3000/login\",userLogin).subscribe((res)=>{\n      this.authToken= res.token;\n      user = res;\n    })\n    return user\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}